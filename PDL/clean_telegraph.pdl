sub clean_telegraph {
    my $hash = shift;
    my $opt = shift;

    $opt = {} unless defined($opt);

    $opt->{TELEGRAPH_CUBE}         = "CEL" unless exists($opt->{TELEGRAPH_CUBE});
    $opt->{TELEGRAPH_MASK_TRIGGER} = 0.5 unless exists($opt->{TELEGRAPH_MASK_TRIGGER});
    $opt->{FILTER_MASK_TRIGGER}    = 1e-13 unless exists($opt->{FILTER_MASK_TRIGGER});
    $opt->{FILTER_DIL_PIX} = 2             unless(exists($opt->{FILTER_DIL_PIX}));

    my $fc = $opt->{TELEGRAPH_CUBE}."_CUBE";
    
#    print "Masking out points (mask trigger=$opt->{TELEGRAPH_MASK_TRIGGER})...";
    my $usc = $hash->{$fc}->convolveND( (rvals(float,9,9)==0) - ones(float,9,9)/81);


    print "Masking out telegraph points..";
    my ($fca, , , , , ,$fcrms) = $hash->{$fc}->mv(2,0)->statsover;
    $fca += $fcrms->med2d(ones(11,11));

    my $tg = ( $usc->range(pdl([0,0,-3],[0,0,-1],[0,0,0],[0,0,1],[0,0,3]),[$hash->{$fc}->dims],'e') * pdl(0.5,1,-3,1,0.5) )->sumover->abs;

    $tg /= $fca;

    my $masknd = ($usc->abs > $opt->{FILTER_MASK_TRIGGER})->byte;
    $masknd |= (!isfinite($usc));
    $masknd |= ($tg > $opt->{TELEGRAPH_MASK_TRIGGER});
    my $wnd = whichND($masknd);
    undef $masknd;

    print "Identified ".$wnd->dim(1)." telegraph points\n";

    print "Dilating by +/- ".(0+$opt->{FILTER_DIL_PIX})."\n";
    $hash->{$fc}->badflag(1);    
    for my $i(-$opt->{FILTER_DIL_PIX} .. $opt->{FILTER_DIL_PIX}) {
	for my $j(-$opt->{FILTER_DIL_PIX} .. $opt->{FILTER_DIL_PIX}) {
	    next if( sqrt($i * $i + $j * $j) > $opt->{FILTER_DIL_PIX} );
	    
	    for my $f(-$opt->{FILTER_DIL_FR} .. $opt->{FILTER_DIL_FR}) {
		my $of0 = pdl($i,$j,$f);
		$hash->{$fc}->indexND($of0 + $wnd,'t') .= $hash->{$fc}->badvalue;
		print ".";
	    }
	}
    }
    print "\n";

    clean_baddies($hash->{$fc});
    return $hash;
}
